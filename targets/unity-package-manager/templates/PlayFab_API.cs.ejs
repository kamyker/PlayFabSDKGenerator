#if <%- getApiDefineFlag(api) %>

using System;
using System.Collections.Generic;
using PlayFab.<%- api.name %>Models;
using PlayFab.Internal;
using System.Threading.Tasks;

namespace PlayFab
{
<%- generateApiSummary("    ", api, "description")
%>    public static <%- isPartial %>class PlayFab<%- api.name %>API
    {
        static PlayFab<%- api.name %>API() {}
<% if (hasClientOptions) { %>
        /// <summary>
        /// Verify client login.
        /// </summary>
        public static bool IsClientLoggedIn()
        {
            return PlayFabSettings.staticPlayer.IsClientLoggedIn();
        }
<% } %>
<% if (hasEntityTokenOptions) { %>
        /// <summary>
        /// Verify entity login.
        /// </summary>
        public static bool IsEntityLoggedIn()
        {
            return PlayFabSettings.staticPlayer.IsEntityLoggedIn();
        }
<% } %>
        /// <summary>
        /// Clear the Client SessionToken which allows this Client to call API calls requiring login.
        /// A new/fresh login will be required after calling this.
        /// </summary>
        public static void ForgetAllCredentials()
        {
            PlayFabSettings.staticPlayer.ForgetAllCredentials();
        }

        private static PlayFabAuthenticationContext GetContext(SharedModels.PlayFabRequestCommon request) => (request == null ? null : request.AuthenticationContext) ?? PlayFabSettings.staticPlayer;

<% var apiRequestsAdded =[]; for(var i in api.calls) 
{ 
	var apiCall = api.calls[i]; 
	%><%- generateApiSummary("        ", apiCall, "summary") 
	%><%- getDeprecationAttribute("        ", apiCall)
%>        public static Task<<%- apiCall.result %>> <% if(apiRequestsAdded.includes(apiCall.request)) { %><%- apiCall.name %><% } else { %>Send<% } %>(<%- apiCall.request %> request, object customData = null, Dictionary<string, string> extraHeaders = null)
        {
            var context = GetContext(request);
<%- getRequestActions("            ", apiCall) %><%-
	getCustomApiLogic("            ", apiCall) %>
            return PlayFabHttp.MakeApiCallAsync<<%- apiCall.result %>>("<%- apiCall.url %>", request, <%- getAuthParams(apiCall) %>, customData, extraHeaders, context);
        }<%- getCustomApiFunction("        ", api, apiCall) %>

<% apiRequestsAdded.push(apiCall.request); } %>
    }
}

#endif
